// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String?
  phoneNumber String?
  address     String?
  creatdAt    DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Client {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  phoneNumber  String?
  address      String?
  pets         Pet[] // Um cliente pode ter v√°rios pets
  appointments Appointment[] // Relacionamento com agendamentos
  creatdAt     DateTime      @default(now())
  updatedAt    DateTime      @default(now())
}

model Pet {
  id           Int           @id @default(autoincrement())
  name         String
  breed        String
  age          Int
  clientId     Int // Relacionamento com Client (um pet pertence a um cliente)
  client       Client        @relation(fields: [clientId], references: [id])
  appointments Appointment[] // Relacionamento com agendamentos
  creatdAt     DateTime      @default(now())
  updatedAt    DateTime      @default(now())
}

model Veterinarian {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  name           String
  specialization String?
  phoneNumber    String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  Appointments   Appointment[]
  availabilities Availability[] // Relacionamento com disponibilidades
}

model Appointment {
  id             Int          @id @default(autoincrement())
  date           DateTime
  clientId       Int
  petId          Int
  veterinarianId Int
  client         Client       @relation(fields: [clientId], references: [id])
  pet            Pet          @relation(fields: [petId], references: [id])
  veterinarian   Veterinarian @relation(fields: [veterinarianId], references: [id])
}

model Availability {
  id             Int          @id @default(autoincrement())
  dayOfWeek      String // Ex.: "Monday"
  startTime      String // Ex.: "08:00"
  endTime        String // Ex.: "17:00"
  veterinarianId Int
  veterinarian   Veterinarian @relation(fields: [veterinarianId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
